"use strict";(self.webpackChunkwindidocs=self.webpackChunkwindidocs||[]).push([[851],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3324:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],p={sidebar_position:8},s="Lens",l={unversionedId:"taking-notes/lens",id:"taking-notes/lens",title:"Lens",description:"This feature needs a Pro plan subscription.",source:"@site/docs/taking-notes/lens.md",sourceDirName:"taking-notes",slug:"/taking-notes/lens",permalink:"/taking-notes/lens",editUrl:"https://github.com/BlueLogicLabs/windi-docs/blob/main/docs/taking-notes/lens.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Linking Notion pages",permalink:"/taking-notes/notion"},next:{title:"Version history",permalink:"/data/version-history"}},c=[{value:"Example queries",id:"example-queries",children:[],level:2},{value:"Syntax",id:"syntax",children:[],level:2}],u={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lens"},"Lens"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This feature needs a Pro plan subscription."))),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This is an experimental feature."))),(0,o.kt)("p",null,"A lens is a ",(0,o.kt)("strong",{parentName:"p"},"custom view")," into your notes."),(0,o.kt)("h2",{id:"example-queries"},"Example queries"),(0,o.kt)("p",null,"All ",(0,o.kt)("em",{parentName:"p"},"public")," notes with the ",(0,o.kt)("inlineCode",{parentName:"p"},"#project")," tag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'tag "project" and public\n')),(0,o.kt)("p",null,"All ",(0,o.kt)("em",{parentName:"p"},"private")," notes with the ",(0,o.kt)("inlineCode",{parentName:"p"},"#project")," tag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'tag "project" and not public\n')),(0,o.kt)("p",null,"All notes with either ",(0,o.kt)("inlineCode",{parentName:"p"},"#project")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"#area")," tags:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'tag "project" or tag "area"\n')),(0,o.kt)("p",null,"All notes with the ",(0,o.kt)("inlineCode",{parentName:"p"},"#project")," tag created after 2022-01-01:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'tag "project" and after 2022-01-01\n')),(0,o.kt)("h2",{id:"syntax"},"Syntax"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lalrpop/lalrpop"},"lalrpop")," grammar definition:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\npub Expr: Box<GraphQueryExpr<\'input>> = {\n  #[precedence(level="1")]\n  <e:E1> =>? e.cost(st, 1),\n\n  #[precedence(level="2")]\n  "not" <expr:Expr> =>? Box::new(GraphQueryExpr::Not {\n    expr,\n  }).cost(st, 1),\n\n  #[precedence(level="3")]\n  #[assoc(side="left")]\n  <left:Expr> "and" <right:Expr> =>? Box::new(GraphQueryExpr::And {\n    left,\n    right,\n  }).cost(st, 1),\n\n  #[precedence(level="4")]\n  #[assoc(side="left")]\n  <left:Expr> "or" <right:Expr> =>? Box::new(GraphQueryExpr::Or {\n    left,\n    right,\n  }).cost(st, 1),\n}\n\nE1: Box<GraphQueryExpr<\'input>> = {\n  "true" => Box::new(GraphQueryExpr::True),\n  "1" => Box::new(GraphQueryExpr::True),\n  "false" => Box::new(GraphQueryExpr::False),\n  "0" => Box::new(GraphQueryExpr::False),\n  "tag" <tag:Str> => Box::new(GraphQueryExpr::HasTag { tag }),\n  "id" <id:Str> => Box::new(GraphQueryExpr::HasId { id }),\n  "before" <time:Date> => Box::new(GraphQueryExpr::TimeBefore { time }),\n  "after" <time:Date> => Box::new(GraphQueryExpr::TimeAfter { time }),\n  "public" => Box::new(GraphQueryExpr::Public),\n  "(" <e:Expr> ")" => e,\n}\n\nStr: Cow<\'input, str> = {\n  <s:r#""[^"]*""#> => Cow::Borrowed(s.trim_matches(\'"\')),\n  <s:r#"\'[^\']*\'"#> => Cow::Borrowed(s.trim_matches(\'\\\'\')),\n}\n\nDate: u64 = {\n  <s:r#"[0-9]{4}-[0-9]{2}-[0-9]{2}"#> =>? chrono::NaiveDate::parse_from_str(s, "%Y-%m-%d")\n    .map(|x| u64::try_from(x.signed_duration_since(chrono::NaiveDate::from_ymd(1970, 1, 1)).num_milliseconds()).unwrap_or(0))\n    .map_err(|_| ParseError::User {\n    error: GraphQueryParseError::InvalidDate,\n  })\n}\n\n')))}d.isMDXComponent=!0}}]);